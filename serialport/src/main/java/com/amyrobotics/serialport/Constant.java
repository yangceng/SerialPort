package com.amyrobotics.serialport;

public interface Constant {
    String AMYROBOT_WAKEUP_ACTION = "com.amyrobotics.wakeup";

    String HEAD_DEVICE_PATH = "/dev/ttyUSB0";
    int HEAD_DEVICE_BAUDRATE = 115200;

    String MIC_DEVICE_PATH = "/dev/ttyUSB1";
    int MIC_DEVICE_BAUDRATE = 115200;

    String MIC_COM_DATA_END = "CMD:WAKEUP   usage: WAKEUP num[0-1]";
    String MIC_WAKEUP_ANGLE = "angle:";
    String MIC_WAKEUP_ANGLE_END = " score:";
    String MIC_APPVER_START = "##### APP_VER:";
    String MIC_LIBVER_START = "##### LIB_VER:";
    String MIC_VER_END = "##### XFM10621 CMD List:";


    String HEAD_1 = "BB";
    String HEAD_2 = "07";
    String HEAD_3 = "A3";
    String HEAD_4 = "7F";
    String LAST = "DD";


    byte[] OPEN_MASHINE = {(byte) 0xBB, (byte) 0x07, (byte) 0xA3, (byte) 0x7F, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x02, (byte) 0xDD};

    byte[] HEAD = {(byte) 0xBB, (byte) 0x07, (byte) 0xA3, (byte) 0x7F};
    //上报电机位置
    byte REPORT_MASHINE_LOC[] = {(byte) 0xBB, (byte) 0x07, (byte) 0xA3, (byte) 0x7F, (byte) 0x00, (byte) 0x02, (byte) 0x01, (byte) 0x03, (byte) 0xDD};
    //左右复位
    byte LR_RESET[] = {(byte) 0xBB, (byte) 0x07, (byte) 0xA3, (byte) 0x7F, (byte) 0x00, (byte) 0x02, (byte) 0x0A, (byte) 0x08, (byte) 0xDD};
    //上下复位
    byte UD_RESET[] = {(byte) 0xBB, (byte) 0x07, (byte) 0xA3, (byte) 0x7F, (byte) 0x00, (byte) 0x02, (byte) 0x0B, (byte) 0x09, (byte) 0xDD};
    //黄色灯环的data指令
    byte YELLOW[] = {(byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00
            , (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00,
            (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00, (byte) 0xFF, (byte) 0xFF, (byte) 0x00};
    //lan色灯环的data指令
    byte BLUE[] = {(byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF
            , (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF
            , (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF};
    //红色灯环的data指令
    byte RED[] = {(byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00
            , (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00
            , (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00};
    //lv色灯环的data指令
    byte GREEN[] = {(byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00
            , (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00
            , (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0xFF, (byte) 0x00};

}
